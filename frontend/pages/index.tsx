import React, { useEffect, useState } from 'react';
import Link from 'next/link';
import { getFlashcards, Flashcard } from '../app/api/flashcardApi';
import FlashcardCard from '../app/components/FlashcardCard';
import { toast } from 'react-hot-toast';

const Dashboard: React.FC = () => {
  const [flashcards, setFlashcards] = useState<Flashcard[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchFlashcards();
  }, []);

  const fetchFlashcards = async () => {
    setLoading(true);
    try {
      const data = await getFlashcards();
      setFlashcards(data);
    } catch (error) {
      console.error('Failed to fetch flashcards:', error);
      toast.error('Failed to load flashcards');
    } finally {
      setLoading(false);
    }
  };

  // Calculate statistics
  const totalFlashcards = flashcards.length;
  const learnedFlashcards = flashcards.filter(card => card.isLearned).length;
  const learningProgress = totalFlashcards > 0 ? (learnedFlashcards / totalFlashcards) * 100 : 0;

  return (
    <div className="space-y-8">
      <div className="text-center">
        <h1 className="text-4xl font-bold gradient-text">FlashAI Dashboard</h1>
        <p className="mt-2 text-gray-600">Your AI-powered language learning assistant</p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="card bg-gradient-to-r from-blue-start to-blue-end text-white">
          <h2 className="text-xl font-semibold">Total Flashcards</h2>
          <p className="text-3xl font-bold mt-2">{totalFlashcards}</p>
        </div>

        <div className="card bg-white">
          <h2 className="text-xl font-semibold text-gray-800">Learned</h2>
          <p className="text-3xl font-bold mt-2 text-green-600">{learnedFlashcards}</p>
        </div>

        <div className="card bg-white">
          <h2 className="text-xl font-semibold text-gray-800">Progress</h2>
          <div className="mt-2">
            <div className="w-full bg-gray-200 rounded-full h-4">
              <div
                className="bg-gradient-to-r from-blue-start to-blue-end h-4 rounded-full"
                style={{ width: `${learningProgress}%` }}
              ></div>
            </div>
            <p className="text-right mt-1 text-sm text-gray-600">{learningProgress.toFixed(1)}%</p>
          </div>
        </div>
      </div>

      {/* Features Section */}
      <div>
        <h2 className="text-2xl font-bold mb-4 text-gray-800">Features</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
          <Link href="/flashcard-generation" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">Flashcard Generation</h3>
            <p className="mt-2 text-gray-600">Create AI-powered flashcards for language learning</p>
          </Link>

          <Link href="/learn-flashcard" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">Learn Flashcards</h3>
            <p className="mt-2 text-gray-600">Study and review your flashcards</p>
          </Link>

          <Link href="/chatbot" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">Language Chatbot</h3>
            <p className="mt-2 text-gray-600">Chat with an AI to improve your language skills</p>
          </Link>

          <Link href="/grammar-checking" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">Grammar Checking</h3>
            <p className="mt-2 text-gray-600">Check and correct grammar in your writing</p>
          </Link>

          <Link href="/ai-checking" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">AI Detection</h3>
            <p className="mt-2 text-gray-600">Check if text was generated by AI</p>
          </Link>

          <Link href="/humanize-ai" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">Humanize AI</h3>
            <p className="mt-2 text-gray-600">Make AI-generated text sound more natural</p>
          </Link>

          <Link href="/enhance-writing" className="card hover:shadow-lg transition-shadow">
            <h3 className="text-xl font-semibold text-primary-dark">Enhance Writing</h3>
            <p className="mt-2 text-gray-600">Improve, rewrite, or paraphrase your writing</p>
          </Link>
        </div>
      </div>

      {/* Recent Flashcards */}
      <div>
        <h2 className="text-2xl font-bold mb-4 text-gray-800">Recent Flashcards</h2>
        {loading ? (
          <p className="text-center py-8 text-gray-500">Loading flashcards...</p>
        ) : flashcards.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {flashcards.slice(0, 6).map((flashcard) => (
              <FlashcardCard
                key={flashcard.word}
                flashcard={flashcard}
                onUpdate={fetchFlashcards}
              />
            ))}
          </div>
        ) : (
          <div className="text-center py-8">
            <p className="text-gray-500">No flashcards found.</p>
            <Link href="/flashcard-generation" className="btn-primary inline-block mt-4">
              Create Your First Flashcard
            </Link>
          </div>
        )}

        {flashcards.length > 6 && (
          <div className="text-center mt-6">
            <Link href="/learn-flashcard" className="btn-primary inline-block">
              View All Flashcards
            </Link>
          </div>
        )}
      </div>
    </div>
  );
};

export default Dashboard;