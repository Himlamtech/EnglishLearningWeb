import React, { useState } from 'react';
import { api } from '../app/api';
import { toast } from 'react-hot-toast';

const AIChecking: React.FC = () => {
  const [text, setText] = useState('');
  const [probability, setProbability] = useState<number | null>(null);
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!text.trim()) {
      toast.error('Please enter some text');
      return;
    }

    setLoading(true);
    try {
      const result = await api.language.checkAIProbability(text);
      setProbability(result);
    } catch (error) {
      console.error('Error checking AI probability:', error);
      toast.error('Failed to check AI probability');
    } finally {
      setLoading(false);
    }
  };

  const getProbabilityColor = () => {
    if (probability === null) return 'bg-gray-200';
    if (probability < 30) return 'bg-green-500';
    if (probability < 70) return 'bg-yellow-500';
    return 'bg-red-500';
  };

  const getProbabilityText = () => {
    if (probability === null) return '';
    if (probability < 30) return 'Low probability - Likely human-written';
    if (probability < 70) return 'Medium probability - Could be AI-assisted';
    return 'High probability - Likely AI-generated';
  };

  return (
    <div className="space-y-8">
      <div className="text-center">
        <h1 className="text-4xl font-bold gradient-text">AI Detection</h1>
        <p className="mt-2 text-gray-600">
          Check if text was likely generated by AI
        </p>
      </div>

      <div className="card max-w-3xl mx-auto">
        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <label htmlFor="text" className="block text-sm font-medium text-gray-700 mb-1">
              Text to Analyze
            </label>
            <textarea
              id="text"
              rows={8}
              className="input-field"
              placeholder="Paste text here to check if it was generated by AI..."
              value={text}
              onChange={(e) => setText(e.target.value)}
              required
            />
            <p className="text-xs text-gray-500 mt-1">
              * For best results, provide at least a paragraph of text
            </p>
          </div>

          <button
            type="submit"
            className="btn-primary w-full"
            disabled={loading}
          >
            {loading ? 'Analyzing...' : 'Check AI Probability'}
          </button>
        </form>
      </div>

      {/* Results Section */}
      {probability !== null && (
        <div className="card max-w-3xl mx-auto">
          <h2 className="text-2xl font-bold text-gray-800 mb-6">Results</h2>

          <div className="mb-6">
            <h3 className="text-lg font-semibold text-gray-800 mb-2">AI Probability</h3>
            <div className="relative pt-1">
              <div className="flex mb-2 items-center justify-between">
                <div>
                  <span className="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-primary-dark">
                    {probability}%
                  </span>
                </div>
                <div className="text-right">
                  <span className="text-xs font-semibold inline-block text-gray-600">
                    {getProbabilityText()}
                  </span>
                </div>
              </div>
              <div className="overflow-hidden h-2 mb-4 text-xs flex rounded bg-gray-200">
                <div
                  style={{ width: `${probability}%` }}
                  className={`shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center ${getProbabilityColor()}`}
                ></div>
              </div>
            </div>
          </div>

          <div className="bg-gray-50 p-4 rounded-md">
            <h3 className="text-lg font-semibold text-gray-800 mb-2">What This Means</h3>
            <p className="text-gray-700">
              {probability < 30 ? (
                <>
                  This text has a <strong>low probability</strong> of being AI-generated. It likely contains human writing patterns, personal style, and natural language variations.
                </>
              ) : probability < 70 ? (
                <>
                  This text has a <strong>medium probability</strong> of being AI-generated. It may be human-written with AI assistance, or it could be AI-generated text that has been edited by a human.
                </>
              ) : (
                <>
                  This text has a <strong>high probability</strong> of being AI-generated. It likely contains patterns, structures, and language typical of AI writing systems.
                </>
              )}
            </p>
          </div>
        </div>
      )}

      <div className="max-w-3xl mx-auto">
        <h2 className="text-xl font-semibold text-gray-800 mb-2">Example Texts to Try</h2>
        <div className="grid grid-cols-1 gap-2">
          <button
            onClick={() => setText("Artificial intelligence (AI) is intelligence demonstrated by machines, as opposed to natural intelligence displayed by animals including humans. AI research has been defined as the field of study of intelligent agents, which refers to any system that perceives its environment and takes actions that maximize its chance of achieving its goals.")}
            className="text-left p-2 bg-gray-100 hover:bg-gray-200 rounded"
          >
            Wikipedia-style text
          </button>
          <button
            onClick={() => setText("OMG I can't believe what happened today!!! So I was walking to class and I saw my crush and I totally freaked out and dropped all my books everywhere ðŸ™ˆ So embarrassing lol but then they helped me pick everything up and we talked for like 5 mins!!! Best day ever!!!")}
            className="text-left p-2 bg-gray-100 hover:bg-gray-200 rounded"
          >
            Casual social media style text
          </button>
        </div>
      </div>
    </div>
  );
};

export default AIChecking;
